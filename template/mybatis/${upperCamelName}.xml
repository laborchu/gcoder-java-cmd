<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="${table.upperCamelName}">



    <resultMap id="${table.lowerCamelName}Result" type="${table.lowerCamelName}BO" extends="A${table.upperCamelName}.${table.lowerCamelName}Result">

    </resultMap>

    <select id="load${table.upperCamelName}" resultMap="${table.lowerCamelName}Result">

        select ${table.abbr}.* from ${table.tableName} ${table.abbr}
        <where>

            <%table.fieldArray.filter(function(field){return !field.sqIgnore}).forEach(function(field,index){%>
            <if test="${field.lowerCamelName}!=null">and ${table.abbr}.`${field.fieldName}`=#{${field.lowerCamelName}}</if><%})%>

        </where>
    </select>

    <select id="load${table.upperCamelName}ForPage" resultMap="${table.lowerCamelName}Result">

        select ${table.abbr}.* from ${table.tableName} ${table.abbr}
        <where>

            <%table.fieldArray.filter(function(field){return !field.sqIgnore}).forEach(function(field,index){%>
            <if test="${field.lowerCamelName}!=null">and ${table.abbr}.`${field.fieldName}`=#{${field.lowerCamelName}}</if><%})%>

        </where>
    </select>

    <insert id="insert${table.upperCamelName}" parameterType="${table.lowerCamelName}BO" useGeneratedKeys="true" keyProperty="id">

        INSERT INTO `${table.tableName}` (
        <trim suffixOverrides=",">
            <%table.fieldArray.filter(function(field){return !field.sqIgnore}).forEach(function(field,index){%>
            <if test="${field.lowerCamelName}!=null">`${field.fieldName}`,</if><%})%>
        </trim>
        )
        VALUES(
        <trim suffixOverrides=",">
            <%table.fieldArray.filter(function(field){return !field.sqIgnore}).forEach(function(field,index){%>
            <if test="${field.lowerCamelName}!=null"> #{${field.lowerCamelName}},</if><%})%>
        </trim>
        )

    </insert>

    <update id="update${table.upperCamelName}" parameterType="${table.lowerCamelName}BO">
        update `${table.tableName}`
        SET
            <trim suffixOverrides=",">
           <%table.fieldArray.filter(function(field){return !field.sqIgnore}).forEach(function(field,index){%>
            <if test="${field.lowerCamelName}!=null">`${field.fieldName}`=#{${field.lowerCamelName}},</if><%})%>
            </trim>
        WHERE
          id=#{id}
    </update>

    <update id="delete${table.upperCamelName}" parameterType="${table.lowerCamelName}BO">
        update `${table.tableName}`
        SET
            data_status = 0,
            modified_date = #{modifiedDate},
            modified_by=#{modifiedBy}
        WHERE
          id=#{id}
    </update>
</mapper>
